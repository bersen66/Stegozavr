# AUTOGENERATED, DON'T CHANGE THIS FILE!


if (NOT USERVER_CHECK_PACKAGE_VERSIONS)
  unset(Protobuf_FIND_VERSION)
endif()

if (TARGET Protobuf)
  if (NOT Protobuf_FIND_VERSION)
      set(Protobuf_FOUND ON)
      return()
  endif()

  if (Protobuf_VERSION)
      if (Protobuf_FIND_VERSION VERSION_LESS_EQUAL Protobuf_VERSION)
          set(Protobuf_FOUND ON)
          return()
      else()
          message(FATAL_ERROR
              "Already using version ${Protobuf_VERSION} "
              "of Protobuf when version ${Protobuf_FIND_VERSION} "
              "was requested."
          )
      endif()
  endif()
endif()

set(FULL_ERROR_MESSAGE "Could not find `Protobuf` package.\n\tDebian: sudo apt update && sudo apt install libyandex-taxi-protobuf-dev libyandex-taxi-protobuf1 libyandex-taxi-protoc1 libyandex-taxi-protoc-dev yandex-taxi-protobuf-compiler\n\tMacOS: brew install protobuf\n\tArchLinux: sudo pacman -S protobuf\\n")


include(FindPackageHandleStandardArgs)

find_library(Protobuf_LIBRARIES_yandex-taxi-protobuf_protobuf
  NAMES yandex-taxi-protobuf protobuf
)
list(APPEND Protobuf_LIBRARIES ${Protobuf_LIBRARIES_yandex-taxi-protobuf_protobuf})

find_path(Protobuf_INCLUDE_DIRS_google_protobuf_port_def_inc
  NAMES google/protobuf/port_def.inc
  PATH_SUFFIXES yandex-taxi-proto3
)
list(APPEND Protobuf_INCLUDE_DIRS ${Protobuf_INCLUDE_DIRS_google_protobuf_port_def_inc})



if (Protobuf_VERSION)
  set(Protobuf_VERSION ${Protobuf_VERSION})
endif()

if (NOT Protobuf_VERSION)
  include(DetectVersion)

  if (UNIX AND NOT APPLE)
    deb_version(Protobuf_VERSION libyandex-taxi-protobuf-dev)
    
    pacman_version(Protobuf_VERSION protobuf)
    
  endif()
  if (APPLE)
    brew_version(Protobuf_VERSION protobuf)
  endif()
  
endif()

 
find_package_handle_standard_args(
  Protobuf
    REQUIRED_VARS
      Protobuf_LIBRARIES
      Protobuf_INCLUDE_DIRS
      
    FAIL_MESSAGE
      "${FULL_ERROR_MESSAGE}"
)
mark_as_advanced(
  Protobuf_LIBRARIES
  Protobuf_INCLUDE_DIRS
  
)

if (NOT Protobuf_FOUND)
  if (Protobuf_FIND_REQUIRED)
      message(FATAL_ERROR "${FULL_ERROR_MESSAGE}. Required version is at least ${Protobuf_FIND_VERSION}")
  endif()

  return()
endif()

if (Protobuf_FIND_VERSION)
  if (Protobuf_VERSION VERSION_LESS Protobuf_FIND_VERSION)
      message(STATUS
          "Version of Protobuf is '${Protobuf_VERSION}'. "
          "Required version is at least '${Protobuf_FIND_VERSION}'. "
          "Ignoring found Protobuf. "
          "Note: Set -DUSERVER_CHECK_PACKAGE_VERSIONS=0 to skip package version checks if the package is fine."
      )
      set(Protobuf_FOUND OFF)
      return()
  endif()
endif()

 
if (NOT TARGET Protobuf)
  add_library(Protobuf INTERFACE IMPORTED GLOBAL)

  target_include_directories(Protobuf INTERFACE ${Protobuf_INCLUDE_DIRS})
  message(STATUS "Protobuf include directories: ${Protobuf_INCLUDE_DIRS}")
  target_link_libraries(Protobuf INTERFACE ${Protobuf_LIBRARIES})
  message(STATUS "Protobuf libraries: ${Protobuf_LIBRARIES}")
  
  # Target Protobuf is created
endif()

if (Protobuf_VERSION)
  set(Protobuf_VERSION "${Protobuf_VERSION}" CACHE STRING "Version of the Protobuf")
endif()
