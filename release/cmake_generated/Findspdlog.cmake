# AUTOGENERATED, DON'T CHANGE THIS FILE!

if (NOT spdlog_FIND_VERSION OR spdlog_FIND_VERSION VERSION_LESS 1.6.0)
    set(spdlog_FIND_VERSION 1.6.0)
endif()

if (NOT USERVER_CHECK_PACKAGE_VERSIONS)
  unset(spdlog_FIND_VERSION)
endif()

if (TARGET spdlog)
  if (NOT spdlog_FIND_VERSION)
      set(spdlog_FOUND ON)
      return()
  endif()

  if (spdlog_VERSION)
      if (spdlog_FIND_VERSION VERSION_LESS_EQUAL spdlog_VERSION)
          set(spdlog_FOUND ON)
          return()
      else()
          message(FATAL_ERROR
              "Already using version ${spdlog_VERSION} "
              "of spdlog when version ${spdlog_FIND_VERSION} "
              "was requested."
          )
      endif()
  endif()
endif()

set(FULL_ERROR_MESSAGE "Could not find `spdlog` package.\n\tDebian: sudo apt update && sudo apt install libspdlog-dev\n\tMacOS: brew install spdlog\n\tFedora: sudo dnf install spdlog-devel\n\tArchLinux: sudo pacman -S spdlog\\n")


include(FindPackageHandleStandardArgs)

find_library(spdlog_LIBRARIES_spdlog
  NAMES spdlog
)
list(APPEND spdlog_LIBRARIES ${spdlog_LIBRARIES_spdlog})

find_path(spdlog_INCLUDE_DIRS_spdlog_logger_h
  NAMES spdlog/logger.h
)
list(APPEND spdlog_INCLUDE_DIRS ${spdlog_INCLUDE_DIRS_spdlog_logger_h})



if (spdlog_VERSION)
  set(spdlog_VERSION ${spdlog_VERSION})
endif()

if (NOT spdlog_VERSION)
  include(DetectVersion)

  if (UNIX AND NOT APPLE)
    deb_version(spdlog_VERSION libspdlog-dev)
    rpm_version(spdlog_VERSION spdlog-devel)
    pacman_version(spdlog_VERSION spdlog)
    
  endif()
  if (APPLE)
    brew_version(spdlog_VERSION spdlog)
  endif()
  pkg_config_version(spdlog_VERSION spdlog)
endif()

 
find_package_handle_standard_args(
  spdlog
    REQUIRED_VARS
      spdlog_LIBRARIES
      spdlog_INCLUDE_DIRS
      
    FAIL_MESSAGE
      "${FULL_ERROR_MESSAGE}"
)
mark_as_advanced(
  spdlog_LIBRARIES
  spdlog_INCLUDE_DIRS
  
)

if (NOT spdlog_FOUND)
  if (spdlog_FIND_REQUIRED)
      message(FATAL_ERROR "${FULL_ERROR_MESSAGE}. Required version is at least ${spdlog_FIND_VERSION}")
  endif()

  return()
endif()

if (spdlog_FIND_VERSION)
  if (spdlog_VERSION VERSION_LESS spdlog_FIND_VERSION)
      message(STATUS
          "Version of spdlog is '${spdlog_VERSION}'. "
          "Required version is at least '${spdlog_FIND_VERSION}'. "
          "Ignoring found spdlog. "
          "Note: Set -DUSERVER_CHECK_PACKAGE_VERSIONS=0 to skip package version checks if the package is fine."
      )
      set(spdlog_FOUND OFF)
      return()
  endif()
endif()

 
if (NOT TARGET spdlog)
  add_library(spdlog INTERFACE IMPORTED GLOBAL)

  target_include_directories(spdlog INTERFACE ${spdlog_INCLUDE_DIRS})
  message(STATUS "spdlog include directories: ${spdlog_INCLUDE_DIRS}")
  target_link_libraries(spdlog INTERFACE ${spdlog_LIBRARIES})
  message(STATUS "spdlog libraries: ${spdlog_LIBRARIES}")
  
  # Target spdlog is created
endif()

if (spdlog_VERSION)
  set(spdlog_VERSION "${spdlog_VERSION}" CACHE STRING "Version of the spdlog")
endif()
