# AUTOGENERATED, DON'T CHANGE THIS FILE!


if (NOT USERVER_CHECK_PACKAGE_VERSIONS)
  unset(SSL_FIND_VERSION)
endif()

if (TARGET SSL)
  if (NOT SSL_FIND_VERSION)
      set(SSL_FOUND ON)
      return()
  endif()

  if (SSL_VERSION)
      if (SSL_FIND_VERSION VERSION_LESS_EQUAL SSL_VERSION)
          set(SSL_FOUND ON)
          return()
      else()
          message(FATAL_ERROR
              "Already using version ${SSL_VERSION} "
              "of SSL when version ${SSL_FIND_VERSION} "
              "was requested."
          )
      endif()
  endif()
endif()

set(FULL_ERROR_MESSAGE "Could not find `SSL` package.\n\tDebian: sudo apt update && sudo apt install libssl-dev\n\tMacOS: brew install openssl\n\tFedora: sudo dnf install openssl-devel\n\tArchLinux: sudo pacman -S openssl\\n")


include(FindPackageHandleStandardArgs)





if (SSL_VERSION)
  set(OpenSSL_VERSION ${SSL_VERSION})
endif()

if (NOT OpenSSL_VERSION)
  include(DetectVersion)

  if (UNIX AND NOT APPLE)
    deb_version(OpenSSL_VERSION libssl-dev)
    rpm_version(OpenSSL_VERSION openssl-devel)
    pacman_version(OpenSSL_VERSION openssl)
    
  endif()
  if (APPLE)
    brew_version(OpenSSL_VERSION openssl)
  endif()
  pkg_config_version(OpenSSL_VERSION libssl)
endif()

find_package(OpenSSL 
    COMPONENTS SSL
 )
set(SSL_FOUND ${OpenSSL_FOUND})
 

if (NOT SSL_FOUND)
  if (SSL_FIND_REQUIRED)
      message(FATAL_ERROR "${FULL_ERROR_MESSAGE}. Required version is at least ${SSL_FIND_VERSION}")
  endif()

  return()
endif()

if (SSL_FIND_VERSION)
  if (OpenSSL_VERSION VERSION_LESS SSL_FIND_VERSION)
      message(STATUS
          "Version of SSL is '${OpenSSL_VERSION}'. "
          "Required version is at least '${SSL_FIND_VERSION}'. "
          "Ignoring found SSL. "
          "Note: Set -DUSERVER_CHECK_PACKAGE_VERSIONS=0 to skip package version checks if the package is fine."
      )
      set(SSL_FOUND OFF)
      return()
  endif()
endif()

 
if (NOT TARGET SSL)
  add_library(SSL INTERFACE IMPORTED GLOBAL)

  if (TARGET OpenSSL::SSL)
    target_link_libraries(SSL INTERFACE OpenSSL::SSL)
  endif()
  
  # Target SSL is created
endif()

if (OpenSSL_VERSION)
  set(SSL_VERSION "${OpenSSL_VERSION}" CACHE STRING "Version of the SSL")
endif()
