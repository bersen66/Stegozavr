# AUTOGENERATED, DON'T CHANGE THIS FILE!


if (NOT USERVER_CHECK_PACKAGE_VERSIONS)
  unset(Grpc_FIND_VERSION)
endif()

if (TARGET Grpc)
  if (NOT Grpc_FIND_VERSION)
      set(Grpc_FOUND ON)
      return()
  endif()

  if (Grpc_VERSION)
      if (Grpc_FIND_VERSION VERSION_LESS_EQUAL Grpc_VERSION)
          set(Grpc_FOUND ON)
          return()
      else()
          message(FATAL_ERROR
              "Already using version ${Grpc_VERSION} "
              "of Grpc when version ${Grpc_FIND_VERSION} "
              "was requested."
          )
      endif()
  endif()
endif()

set(FULL_ERROR_MESSAGE "Could not find `Grpc` package.\n\tDebian: sudo apt update && sudo apt install libyandex-taxi-grpc-dev libyandex-taxi-grpc7 libyandex-taxi-grpc++-dev libyandex-taxi-grpc++1 yandex-taxi-protobuf-compiler-grpc\n\tMacOS: brew install grpc\n\tFedora: sudo dnf install grpc-devel grpc-plugins python3-protobuf python3-jinja2\n\tArchLinux: sudo pacman -S grpc\\n")


include(FindPackageHandleStandardArgs)

find_library(Grpc_LIBRARIES_grpc
  NAMES grpc
)
list(APPEND Grpc_LIBRARIES ${Grpc_LIBRARIES_grpc})
find_library(Grpc_LIBRARIES_grpc++
  NAMES grpc++
)
list(APPEND Grpc_LIBRARIES ${Grpc_LIBRARIES_grpc++})
find_library(Grpc_LIBRARIES_gpr
  NAMES gpr
)
list(APPEND Grpc_LIBRARIES ${Grpc_LIBRARIES_gpr})
find_library(Grpc_LIBRARIES_yandex-taxi-cares_cares
  NAMES yandex-taxi-cares cares
)
list(APPEND Grpc_LIBRARIES ${Grpc_LIBRARIES_yandex-taxi-cares_cares})
find_library(Grpc_LIBRARIES_address_sorting
  NAMES address_sorting
)
list(APPEND Grpc_LIBRARIES ${Grpc_LIBRARIES_address_sorting})

find_path(Grpc_INCLUDE_DIRS_grpc_grpc_h
  NAMES grpc/grpc.h
)
list(APPEND Grpc_INCLUDE_DIRS ${Grpc_INCLUDE_DIRS_grpc_grpc_h})
find_path(Grpc_INCLUDE_DIRS_google_protobuf_port_def_inc
  NAMES google/protobuf/port_def.inc
  PATH_SUFFIXES yandex-taxi-proto3
)
list(APPEND Grpc_INCLUDE_DIRS ${Grpc_INCLUDE_DIRS_google_protobuf_port_def_inc})



if (Grpc_VERSION)
  set(Grpc_VERSION ${Grpc_VERSION})
endif()

if (NOT Grpc_VERSION)
  include(DetectVersion)

  if (UNIX AND NOT APPLE)
    deb_version(Grpc_VERSION libyandex-taxi-grpc-dev)
    rpm_version(Grpc_VERSION grpc-devel)
    pacman_version(Grpc_VERSION grpc)
    
  endif()
  if (APPLE)
    brew_version(Grpc_VERSION grpc)
  endif()
  
endif()

 
find_package_handle_standard_args(
  Grpc
    REQUIRED_VARS
      Grpc_LIBRARIES
      Grpc_INCLUDE_DIRS
      
    FAIL_MESSAGE
      "${FULL_ERROR_MESSAGE}"
)
mark_as_advanced(
  Grpc_LIBRARIES
  Grpc_INCLUDE_DIRS
  
)

if (NOT Grpc_FOUND)
  if (Grpc_FIND_REQUIRED)
      message(FATAL_ERROR "${FULL_ERROR_MESSAGE}. Required version is at least ${Grpc_FIND_VERSION}")
  endif()

  return()
endif()

if (Grpc_FIND_VERSION)
  if (Grpc_VERSION VERSION_LESS Grpc_FIND_VERSION)
      message(STATUS
          "Version of Grpc is '${Grpc_VERSION}'. "
          "Required version is at least '${Grpc_FIND_VERSION}'. "
          "Ignoring found Grpc. "
          "Note: Set -DUSERVER_CHECK_PACKAGE_VERSIONS=0 to skip package version checks if the package is fine."
      )
      set(Grpc_FOUND OFF)
      return()
  endif()
endif()

 
if (NOT TARGET Grpc)
  add_library(Grpc INTERFACE IMPORTED GLOBAL)

  target_include_directories(Grpc INTERFACE ${Grpc_INCLUDE_DIRS})
  message(STATUS "Grpc include directories: ${Grpc_INCLUDE_DIRS}")
  target_link_libraries(Grpc INTERFACE ${Grpc_LIBRARIES})
  message(STATUS "Grpc libraries: ${Grpc_LIBRARIES}")
  
  # Target Grpc is created
endif()

if (Grpc_VERSION)
  set(Grpc_VERSION "${Grpc_VERSION}" CACHE STRING "Version of the Grpc")
endif()
