# AUTOGENERATED, DON'T CHANGE THIS FILE!

if (NOT c-ares_FIND_VERSION OR c-ares_FIND_VERSION VERSION_LESS 1.16.0)
    set(c-ares_FIND_VERSION 1.16.0)
endif()

if (NOT USERVER_CHECK_PACKAGE_VERSIONS)
  unset(c-ares_FIND_VERSION)
endif()

if (TARGET c-ares)
  if (NOT c-ares_FIND_VERSION)
      set(c-ares_FOUND ON)
      return()
  endif()

  if (c-ares_VERSION)
      if (c-ares_FIND_VERSION VERSION_LESS_EQUAL c-ares_VERSION)
          set(c-ares_FOUND ON)
          return()
      else()
          message(FATAL_ERROR
              "Already using version ${c-ares_VERSION} "
              "of c-ares when version ${c-ares_FIND_VERSION} "
              "was requested."
          )
      endif()
  endif()
endif()

set(FULL_ERROR_MESSAGE "Could not find `c-ares` package.\n\tDebian: sudo apt update && sudo apt install libc-ares-dev\n\tMacOS: brew install c-ares\n\tFedora: sudo dnf install c-ares-devel\n\tArchLinux: sudo pacman -S c-ares\\n")


include(FindPackageHandleStandardArgs)

find_library(c-ares_LIBRARIES_cares
  NAMES cares
)
list(APPEND c-ares_LIBRARIES ${c-ares_LIBRARIES_cares})

find_path(c-ares_INCLUDE_DIRS_ares_h
  NAMES ares.h
)
list(APPEND c-ares_INCLUDE_DIRS ${c-ares_INCLUDE_DIRS_ares_h})



if (c-ares_VERSION)
  set(c-ares_VERSION ${c-ares_VERSION})
endif()

if (NOT c-ares_VERSION)
  include(DetectVersion)

  if (UNIX AND NOT APPLE)
    deb_version(c-ares_VERSION libc-ares-dev)
    rpm_version(c-ares_VERSION c-ares-devel)
    pacman_version(c-ares_VERSION c-ares)
    
  endif()
  if (APPLE)
    brew_version(c-ares_VERSION c-ares)
  endif()
  pkg_config_version(c-ares_VERSION libcares)
endif()

 
find_package_handle_standard_args(
  c-ares
    REQUIRED_VARS
      c-ares_LIBRARIES
      c-ares_INCLUDE_DIRS
      
    FAIL_MESSAGE
      "${FULL_ERROR_MESSAGE}"
)
mark_as_advanced(
  c-ares_LIBRARIES
  c-ares_INCLUDE_DIRS
  
)

if (NOT c-ares_FOUND)
  if (c-ares_FIND_REQUIRED)
      message(FATAL_ERROR "${FULL_ERROR_MESSAGE}. Required version is at least ${c-ares_FIND_VERSION}")
  endif()

  return()
endif()

if (c-ares_FIND_VERSION)
  if (c-ares_VERSION VERSION_LESS c-ares_FIND_VERSION)
      message(STATUS
          "Version of c-ares is '${c-ares_VERSION}'. "
          "Required version is at least '${c-ares_FIND_VERSION}'. "
          "Ignoring found c-ares. "
          "Note: Set -DUSERVER_CHECK_PACKAGE_VERSIONS=0 to skip package version checks if the package is fine."
      )
      set(c-ares_FOUND OFF)
      return()
  endif()
endif()

 
if (NOT TARGET c-ares)
  add_library(c-ares INTERFACE IMPORTED GLOBAL)

  target_include_directories(c-ares INTERFACE ${c-ares_INCLUDE_DIRS})
  message(STATUS "c-ares include directories: ${c-ares_INCLUDE_DIRS}")
  target_link_libraries(c-ares INTERFACE ${c-ares_LIBRARIES})
  message(STATUS "c-ares libraries: ${c-ares_LIBRARIES}")
  
  # Target c-ares is created
endif()

if (c-ares_VERSION)
  set(c-ares_VERSION "${c-ares_VERSION}" CACHE STRING "Version of the c-ares")
endif()
